---
description: If u are in PrePilot Project apply the following rules **1. The Iconography Mandate: Professional Icons Over Emojis**  **Core Rule:** For the entire **PrePilot.Cloud** application, you are **strictly prohibited** from using emoji characters (e.g., "ðŸ’¡", "ðŸš€", "ðŸ’°") directly in the JSX code for UI elements. All icons must be implemented using a dedicated icon library.  **The Rationale (Why this is important):** *   **Consistency:** Emojis render differently across operating systems (Windows, macOS, Android, iOS), browsers, and even browser versions. This leads to an inconsistent and unprofessional user experience. *   **Styling & Control:** Library-based icons are SVG elements that can be precisely controlled with CSS (color, size, stroke width, hover effects) to match our design system perfectly. Emojis offer almost no styling control. *   **Performance & Accessibility:** A well-chosen icon library is optimized for performance and provides better accessibility attributes (like titles and roles) for screen readers.  **2. The Official Icon Library: `react-icons`**  **The Standard:** The official and **only** approved icon library for this project is **`react-icons`**.  **Implementation Protocol:** 1.  **Installation:** Assume the library is installed (`npm install react-icons`). 2.  **Importing:** You must import icons specifically from their respective sets within the library. The preferred icon set for our modern, clean aesthetic is **Feather Icons (`/fi`)**. You may use Material Design Icons (`/md`) as a secondary option if a specific icon is not available in Feather.     *   **Correct Usage:**         ```typescript         import { FiInfo, FiUploadCloud } from 'react-icons/fi';         import { MdSummarize } from 'react-icons/md';         ```     *   **Incorrect Usage (Avoid):**         ```typescript         // Do not import from the top-level, as it hurts performance.         import { FiInfo } from 'react-icons';          ``` 3.  **Usage in Components:**     *   Render the imported icon as a React component: `<FiInfo />`.     *   Apply styling using Tailwind CSS classes directly via the `className` prop:         ```jsx         <FiUploadCloud className="w-5 h-5 text-primary-accent" />         ```  **3. Actionable Directives & Scenarios**  *   **When a prompt mentions an emoji:** If I provide a prompt that includes an emoji as a visual cue (e.g., "Add a ðŸ’¡ icon"), you are to **interpret this as a request for a conceptual icon** and find the most appropriate equivalent in the `react-icons/fi` library.     *   `ðŸ’¡` should be translated to `<FiZap />` or `<FiGitCommit />`.     *   `ðŸš€` should be translated to `<FiRocket />` or `<FiChevronsUp />`.     *   `ðŸ’°` should be translated to `<FiDollarSign />` or `<FiTrendingUp />`. *   **Buttons & Interactive Elements:** All buttons that perform an action should have a corresponding icon alongside the text to improve usability and scannability.     *   Example: `<Button><FiPlus className="mr-2" /> New Plan</Button>` *   **Abstract Concepts:** For abstract concepts like "Strategy" or "Analysis," choose clean, minimalist icons that best represent the idea (e.g., `<FiCrosshair />`, `<FiBarChart2 />`).  By adhering to this instruction, you will ensure that the iconography of PrePilot.Cloud is as professional, consistent, and polished as the rest of its architecture.
alwaysApply: true
---
